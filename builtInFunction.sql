--builtin functions in SQL

CREATE DATABASE FACULTY

CREATE TABLE Faculty_Data 
(  
Faculty_ID INT NOT NULL PRIMARY KEY,    
Faculty_First_Name VARCHAR (100),    
Faculty_Last_Name VARCHAR (100),    
Faculty_Dept_Id INT NOT NULL,  
Faculty_Address Varchar(120),  
Faculty_City Varchar (80),  
Faculty_Salary INT   
);  

INSERT INTO Faculty_Data(Faculty_ID, Faculty_First_Name, Faculty_Last_Name,Faculty_Dept_Id, Faculty_Address, Faculty_City, Faculty_Salary) 
VALUES (1001, 'Arush', 'Sharma', 4001, 'Aman Vihar', 'Delhi', 20000), 
       (1002, 'Bulbul', 'Roy', 4002, 'Nirman Vihar', 'Delhi', 38000 ),  
       (1004, 'Saurabh', 'Sharma', 4001, 'Suyash Vihar', 'Mumbai', 45000),  
       (1005, 'Shivani', 'Singhania', 4001, 'Vivek Vihar', 'Kolkata', 42000),  
       (1006, 'Avinash', 'Sharma', 4002, 'Sarvodya Calony', 'Delhi', 28000);  

SELECT * FROM Faculty_Data

USE FACULTY

--ASCII
SELECT ASCII('A')

SELECT ASCII('sql')

SELECT Faculty_First_Name,ASCII(Faculty_First_Name) AS F_NAME FROM Faculty_Data

--char
SELECT CHAR(78)

--CHARINDEX
SELECT CHARINDEX('V','VIRA') --POSITION OF V

--DIFFERENCE
SELECT DIFFERENCE('TEST','TESTING') --DIFFERNCE BETWEENN STRINGS The DIFFERENCE() function compares two SOUNDEX values, and returns an integer. The integer value indicates the match for the two SOUNDEX values, from 0 to 4.

--0 indicates weak or no similarity between the SOUNDEX values. 4 indicates strong similarity or identically SOUNDEX values.
SELECT DIFFERENCE('TEST','test')

--LEFT RETURN LEFT PART OF STRING UNTIL MENTIONED NUMBER
SELECT LEFT('MICROSOFT',5)

--LEN RETURNS LENGTH OF STRING
SELECT LEN('ROUTER')

--LOWER UPPERCASE TO LOWERCASE
SELECT LOWER('LOWER')

--LTRIM REMOVES EMPTY SPACE FROM LEFT SIDE OF STRING
SELECT LTRIM('   I HAVE JUST JOINED IN CELEBAL')

--NCHAR RETURN UNICODE CHARACTER OF INTEGER STRING
SELECT NCHAR(800)
SELECT NCHAR(400)
SELECT NCHAR(500)

--PATINDEX RETURN STRATING INDEX POSITION OF 1ST OCCURENCE OF PATTERN
SELECT PATINDEX('RT%','RTMAX') --1ST PATTERN AT 1 POSITION
SELECT PATINDEX('%RT%','SEERTMAX')       --4TH POSITION


--QUOTENAME RETURNS UNICODE STRING WITH DELIMETERS
SELECT QUOTENAME('I HAVE JUST JOINED IN CELEBAL','"')

--REPLACE REPLACE EXISTING STRING WITH NEW STRING
SELECT REPLACE('INTERNSHIP','I','P')
--REPLICATE REPEAT STRING GIVEN NO. OF TIMES
SELECT REPLICATE('PRACHI',3)


--REVERSE REVERSE STRING
SELECT REVERSE('PLLCEMENT')

--RIGHT RETURNS RIGHT PART OF CHARACTER STRING WITH SPECIFIED NO. OF CHARA
SELECT RIGHT('TNP',2)
--RTRIM REOVES SPACE FROM RIGHT
SELECT RTRIM('I HAVE JUST JOINED IN CELEBAL   ')

--SOUNDEX RETURNS 4 IF SIMILAR STRING
SELECT SOUNDEX('TESTING'),SOUNDEX('TEST')

--SPACE ADDS SPACE AS DEFINED IN INTEGER
SELECT 'I AM '+SPACE(2)+'PRACHI'+SPACE(1)+'INTERN AT CELEBAL'

--STR RETURN CHARACTER DATA CONVERTED FROM NUMERIC DATA
SELECT STR(679.5676,6,2)  --INCLUDE 6 CHARACTER(INCLUDING DECIMAL POINT) , CONSIDER 2 CHARACTERS AFTER POINT

--STRING SPLIT SPLIT STRING INTO TABLE ...each splitted part comes in column of table

SELECT VALUE FROM String_split('I HAVE JUST JOINED IN CELEBAL',' ')

--stuff  deletes specified length of characters and inserts another set of characters at specified starting point
 SELECT STUFF('TEACHY',3,2,'YOP')   --ACH WILL BE DELETED (FROM 3 TILL 2 LENGTH ) AND REPLACED BY YOP

 --SUBSTRING RETURN SUBSTRING FROM GIVE START TO LENGTH PROVIDED
 SELECT SUBSTRING('INTERNET',3,4)

 --UNICODE RETURN UNICODE VALUE FOR 1ST CHARACTER OF IP EXPRESSION
 SELECT UNICODE('FSA')

 --UPPER LOWER TO UPPER
 SELECT UPPER('upper')

 SELECT UPPER('UpEEer')



 --date time function
 --NOW
 --DATETIME
 SELECT SYSDATETIMEOFFSET()
 SELECT GETDATE()

 CREATE TABLE DATETIME1
 (ID INT IDENTITY,
 [DATE] DATE,
 [DATETIME] DATETIME,
 [DATETIME2] DATETIME2,
 [DATETIMEOFFSET] DATETIMEOFFSET,
 [UTCDATETIME] DATETIME2)

 INSERT INTO DATETIME1
 SELECT CAST(GETDATE() AS DATE), GETDATE(), SYSDATETIME(),SYSDATETIMEOFFSET(),SYSUTCDATETIME()

SELECT * FROM DATETIME1
 
SELECT DATENAME(YEAR,GETDATE()) --RETURNS YEAR
SELECT DATENAME(DAY,GETDATE()) --RETURNS DAY
SELECT DATENAME(WEEKDAY,GETDATE()) --RETURNS WEEKDAY
SELECT DATENAME(MINUTE,GETDATE()) --RETURNS MIN
SELECT DATENAME(SECOND,GETDATE()) --RETURNS SEC
SELECT DATENAME(HOUR,GETDATE()) --RETURNS HR

--DATEPART DOES SAME LIKE DATENAME
 SELECT DATEPART(YEAR,GETDATE()) --RETURNS YEAR

 --YEAR
 SELECT YEAR(GETDATE())
 --DAY
 SELECT DAY(GETDATE())
 --MONTH
 SELECT MONTH(GETDATE())


